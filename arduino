// 수정된 Arduino 코드: 방향 문제 해결

#define DIR_X 2      // X축 방향 (CW+)
#define STEP_X 3     // X축 스텝 (CLK+)
#define EN_X 6       // X축 활성화 (EN+)

#define DIR_Y 4      // Y축 방향 (CW+)
#define STEP_Y 5     // Y축 스텝 (CLK+)
#define EN_Y 7       // Y축 활성화 (EN+)

#define STEP_DELAY 800  // 스텝 딜레이 (마이크로초)

void setup() {
  pinMode(DIR_X, OUTPUT);  pinMode(STEP_X, OUTPUT);  pinMode(EN_X, OUTPUT);
  pinMode(DIR_Y, OUTPUT);  pinMode(STEP_Y, OUTPUT);  pinMode(EN_Y, OUTPUT);

  digitalWrite(EN_X, HIGH);  // 기본은 비활성화
  digitalWrite(EN_Y, HIGH);

  Serial.begin(9600);
  Serial.println("[Arduino] READY");
  Serial.flush(); // 즉시 출력
}

void loop() {
  if (Serial.available()) {
    String cmd = Serial.readStringUntil('\n');
    cmd.trim();

    if (cmd == "HOME") {
      Serial.println("[Arduino] HOMING triggered");
      Serial.flush();
      return;
    }

    int dix = -1, diy = -1;
    long stx = 0, sty = 0;

    int i1 = cmd.indexOf(',');
    int i2 = cmd.indexOf(',', i1 + 1);
    int i3 = cmd.indexOf(',', i2 + 1);

    if (i1 > 0 && i2 > i1 && i3 > i2) {
      dix = cmd.substring(0, i1).toInt();
      diy = cmd.substring(i1 + 1, i2).toInt();
      stx = cmd.substring(i2 + 1, i3).toInt();
      sty = cmd.substring(i3 + 1).toInt();

      // 방향 반전: 필요 시 1 - 값
      dix = 1 - dix;  // X축 방향 반전
      diy = 1 - diy;  // Y축 방향 반전

      Serial.print("[Arduino] Parsed: Xdir="); Serial.print(dix);
      Serial.print(" Ydir="); Serial.print(diy);
      Serial.print(" Xstep="); Serial.print(stx);
      Serial.print(" Ystep="); Serial.println(sty);
      Serial.flush();

      moveMotor(DIR_X, STEP_X, EN_X, dix, stx);
      delay(300);
      moveMotor(DIR_Y, STEP_Y, EN_Y, diy, sty);
    } else {
      Serial.print("[Arduino] Parse error: "); Serial.println(cmd);
      Serial.flush();
    }
  }
}

void moveMotor(int dirPin, int stepPin, int enPin, bool direction, long steps) {
  digitalWrite(enPin, LOW);             // 드라이버 활성화
  digitalWrite(dirPin, direction);      // 방향 설정

  for (long i = 0; i < steps; i++) {
    digitalWrite(stepPin, HIGH);
    delayMicroseconds(STEP_DELAY);
    digitalWrite(stepPin, LOW);
    delayMicroseconds(STEP_DELAY);
  }

  digitalWrite(enPin, HIGH);            // 드라이버 비활성화
}
